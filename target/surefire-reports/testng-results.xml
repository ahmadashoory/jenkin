<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="25" passed="24" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-13T18:18:58 PDT" name="Surefire suite" finished-at="2023-09-13T18:19:28 PDT" duration-ms="30540">
    <groups>
      <group name="regression">
        <method signature="TestNG_GroupingAndDependency.test4()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" name="test4" class="tests.TestNG_GroupingAndDependency"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="TestNG_GroupingAndDependency.test1()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" name="test1" class="tests.TestNG_GroupingAndDependency"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-09-13T18:18:58 PDT" name="Surefire test" finished-at="2023-09-13T18:19:28 PDT" duration-ms="30540">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.LoginTest@542e560f]" started-at="2023-09-13T18:18:58 PDT" name="beforeTest" finished-at="2023-09-13T18:19:27 PDT" duration-ms="28635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="login()[pri:0, instance:tests.LoginTest@542e560f]" started-at="2023-09-13T18:19:27 PDT" name="login" finished-at="2023-09-13T18:19:27 PDT" duration-ms="80" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.LoginTest.login(LoginTest.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.LoginTest@542e560f]" started-at="2023-09-13T18:19:27 PDT" name="afterTest" finished-at="2023-09-13T18:19:28 PDT" duration-ms="1337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.TestNG_Annotations">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:18:58 PDT" name="beforeSuite" finished-at="2023-09-13T18:18:58 PDT" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="beforeTest" finished-at="2023-09-13T18:19:27 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="beforeClass" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="login()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="login" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="test1" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test2()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="test2" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:27 PDT" name="afterClass" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:28 PDT" name="afterTest" finished-at="2023-09-13T18:19:28 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.TestNG_Annotations@5aac4250]" started-at="2023-09-13T18:19:28 PDT" name="afterSuite" finished-at="2023-09-13T18:19:28 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNG_Annotations -->
      <class name="tests.TestNG_GroupingAndDependency">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:18:58 PDT" name="beforeSuite" finished-at="2023-09-13T18:18:58 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforTest()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforTest" finished-at="2023-09-13T18:19:27 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeClass" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="alwaysRun()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="alwaysRun" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alwaysRun -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dependsOnMethods()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="dependsOnMethods" finished-at="2023-09-13T18:19:27 PDT" depends-on-methods="tests.TestNG_GroupingAndDependency.alwaysRun" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dependsOnMethods -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="description()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="description" description="it is not ready yet" finished-at="2023-09-13T18:19:27 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- description -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="runTestMultipleTimes()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="runTestMultipleTimes" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runTestMultipleTimes()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="runTestMultipleTimes" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="test" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="test1" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="test2" finished-at="2023-09-13T18:19:27 PDT" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="test2" finished-at="2023-09-13T18:19:27 PDT" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test4()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="test4" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test5()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="test5" depends-on-groups="regression" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:27 PDT" name="afterClass" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:28 PDT" name="afterTest" finished-at="2023-09-13T18:19:28 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="gracefulTearDown()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:28 PDT" name="gracefulTearDown" finished-at="2023-09-13T18:19:28 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gracefulTearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.TestNG_GroupingAndDependency@fade1fc]" started-at="2023-09-13T18:19:28 PDT" name="afterSuite" finished-at="2023-09-13T18:19:28 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNG_GroupingAndDependency -->
      <class name="tests.TestNG_Features">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:18:58 PDT" name="beforeSuite" finished-at="2023-09-13T18:18:58 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforTest()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforTest" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforTest -->
        <test-method is-config="true" signature="user_is_on_test_environment_page()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="user_is_on_test_environment_page" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_is_on_test_environment_page -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeClass" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runTestMultipleTimes()[pri:-1, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="runTestMultipleTimes" finished-at="2023-09-13T18:19:27 PDT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runTestMultipleTimes()[pri:-1, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="runTestMultipleTimes" finished-at="2023-09-13T18:19:27 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="description()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="description" description="it is not ready yet" finished-at="2023-09-13T18:19:27 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- description -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dividedByZeroExample1()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="dividedByZeroExample1" finished-at="2023-09-13T18:19:27 PDT" duration-ms="6" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at tests.TestNG_Features.dividedByZeroExample1(TestNG_Features.java:116)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dividedByZeroExample1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="executetimeOut()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="executetimeOut" finished-at="2023-09-13T18:19:27 PDT" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executetimeOut -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="test" finished-at="2023-09-13T18:19:27 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testCaseSkipException()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="testCaseSkipException" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseSkipException -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="alwaysRun()[pri:1, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="alwaysRun" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alwaysRun -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="smoke()[pri:2, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="smoke" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smoke -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="beforeMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="integration()[pri:3, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="integration" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterMethod" finished-at="2023-09-13T18:19:27 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:27 PDT" name="afterClass" finished-at="2023-09-13T18:19:27 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:28 PDT" name="afterTest" finished-at="2023-09-13T18:19:28 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="gracefulTearDown()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:28 PDT" name="gracefulTearDown" finished-at="2023-09-13T18:19:28 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gracefulTearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.TestNG_Features@59f63e24]" started-at="2023-09-13T18:19:28 PDT" name="afterSuite" finished-at="2023-09-13T18:19:28 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNG_Features -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
